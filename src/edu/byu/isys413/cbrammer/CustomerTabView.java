/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * CustomerTabView.java
 *
 * Created on Feb 16, 2010, 5:01:15 PM
 */

package edu.byu.isys413.cbrammer;

import java.sql.Timestamp;
import java.util.Calendar;
import java.util.Date;
import java.util.LinkedList;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Daniel
 */
public class CustomerTabView extends javax.swing.JPanel {
    private List<Customer> custList;
    private Customer selectedCustomer;
    private List<AreaOfInterest> allInterests = new LinkedList();
    private List<AreaOfInterest> customerInterests = new LinkedList();
    

    /**
     * Set the customer list
     * @param custList
     */
    public void setCustList(List<Customer> custList){
        this.custList = custList;
        updateList();
    }

    /**
     * Update the customer list
     */
    private void updateList() {
        // Get the custs
        DefaultListModel listmodel = new DefaultListModel();
        for (Customer c: custList) {
            listmodel.addElement(c);
        }
        // Add them to a list model
        CustomerList.setModel(listmodel);
        if(selectedCustomer != null) {
            CustomerList.setSelectedValue(selectedCustomer, true);
        }
    }

    private void updateAllInterestList() {
        // Get the custs
        DefaultListModel listmodel = new DefaultListModel();
        for (AreaOfInterest a: allInterests) {
            listmodel.addElement(a.getDescription());
        }
        // Add them to a list model
        interestList.setModel(listmodel);
        
    }


    private void updateCustomerInterestList(Customer c) {
        // Get the custs
        DefaultListModel listmodel = new DefaultListModel();
        for (AreaOfInterest a: c.getMembership().getAreasOfInterestList()) {
            listmodel.addElement(a.getDescription());
        }
        // Add them to a list model
        customerInterestsList.setModel(listmodel);

    }


    /**
     * init membership info
     */
    private void populateMembership(){


         if (isMemberBox != null && cardText != null && customerInterestsList != null){

            Membership member = null;
            try {
                member = MembershipDAO.getInstance().create(GUID.generate());

            } catch (DataException ex) {
                ex.printStackTrace();
              }


            member.setCreditCardNumber(cardText.getText());
            member.setStartDate(new Timestamp(new Date().getTime()));
            Calendar cal = Calendar.getInstance();
            cal.add(Calendar.YEAR, 1);
            Date myDate = cal.getTime();
            Timestamp timeStampDate = new Timestamp(myDate.getTime());
            member.setExpireDate(timeStampDate);
            selectedCustomer.setMembership(member);

            updateAllInterestList();


        }
    }
 
    private void clearMembershipInfo (){

        

            cardText.setText("");
            isMemberBox.setSelected(false);

            DefaultListModel listmodel = new DefaultListModel();
            customerInterestsList.setModel(listmodel);
            interestList.setModel(listmodel);
            selectedCustomer.setMembership(null);


    }



    /**
     * Init the data for the applciation
     */
    public void initData() {
        // get the customers
        try {
            setCustList(CustomerDAO.getInstance().getAll());
        } catch (DataException ex) {
            JOptionPane.showMessageDialog(this,"Unable to load all customers");
        }

        try {
            allInterests = AreaOfInterestDAO.getInstance().getAll();
        } catch (DataException ex){
            JOptionPane.showMessageDialog(this,"Unable to load interests");

        }
    }
    
    /** Creates new form CustomerTabView */
    public CustomerTabView() {
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        newButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        CustomerList = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        FNameText = new javax.swing.JTextField();
        saveButton = new javax.swing.JButton();
        emailText = new javax.swing.JTextField();
        phoneText = new javax.swing.JTextField();
        addressText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        LNameText = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        cardText = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        isMemberBox = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        interestList = new javax.swing.JList();
        addButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        customerInterestsList = new javax.swing.JList();

        newButton.setText("New");
        newButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newButtonMouseClicked(evt);
            }
        });

        CustomerList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        CustomerList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                CustomerListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(CustomerList);

        jLabel3.setText("Address:");

        jLabel2.setText("Last Name: ");

        jLabel1.setText("First Name:");

        saveButton.setText("Save");
        saveButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveButtonMouseClicked(evt);
            }
        });

        jLabel4.setText("Phone:");

        jLabel5.setText("Email:");

        jLabel6.setText("Membership Information");

        jLabel7.setText("Credit Card:");

        jLabel8.setText("Areas of Interest:");

        isMemberBox.setText("Is Member");
        isMemberBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                isMemberBoxMouseClicked(evt);
            }
        });

        interestList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(interestList);

        addButton.setText("Add");
        addButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addButtonMouseClicked(evt);
            }
        });

        jScrollPane3.setViewportView(customerInterestsList);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newButton, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(FNameText, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                    .addComponent(emailText, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                    .addComponent(phoneText, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                    .addComponent(LNameText, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)
                                    .addComponent(addressText, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE)))
                            .addComponent(saveButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 208, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addButton, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 236, Short.MAX_VALUE)
                                .addGap(8, 8, 8))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cardText, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE))
                            .addComponent(isMemberBox)
                            .addComponent(jLabel6)
                            .addComponent(jLabel8))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 597, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(FNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(LNameText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addressText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phoneText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(emailText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(33, 33, 33)
                        .addComponent(jLabel6)
                        .addGap(26, 26, 26)
                        .addComponent(isMemberBox)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cardText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addButton)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newButton)
                    .addComponent(saveButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void saveButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveButtonMouseClicked

        // set the customers to the new object
        selectedCustomer.setFirstName(FNameText.getText());
        selectedCustomer.setLastName(LNameText.getText());
        selectedCustomer.setAddress(addressText.getText());
        selectedCustomer.setPhone(phoneText.getText());
        selectedCustomer.setEmail(emailText.getText());
        selectedCustomer.getMembership().setCreditCardNumber(cardText.getText());

        // Save it out
        
       
        
        try {
            CustomerDAO.getInstance().save(selectedCustomer);
            updateList();
        } catch (DataException ex) {
            JOptionPane.showMessageDialog(this,"Unable to save customer");
        }

        // Update the list again
        Model.getInstance().populateCustomers();
    }//GEN-LAST:event_saveButtonMouseClicked

    private void CustomerListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_CustomerListMouseClicked
        selectedCustomer = (Customer) CustomerList.getSelectedValue();
        setCustInfo(selectedCustomer);          
        
    }//GEN-LAST:event_CustomerListMouseClicked

    private void newButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newButtonMouseClicked

        // Create a new customer and add it to the list
        selectedCustomer = new Customer(GUID.generate());
        selectedCustomer.setFirstName("new");
        selectedCustomer.setLastName("customer");
        setCustInfo(selectedCustomer);
        custList.add(selectedCustomer);
        updateList();

    }//GEN-LAST:event_newButtonMouseClicked

    private void isMemberBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_isMemberBoxMouseClicked


        if (isMemberBox.isSelected()) {
            populateMembership();

        }else{
            clearMembershipInfo();

        
        }
    }//GEN-LAST:event_isMemberBoxMouseClicked

    private void addButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addButtonMouseClicked


        DefaultListModel listmodel = new DefaultListModel();

        listmodel.addElement(allInterests.get(interestList.getSelectedIndex()).getDescription());

        // Add them to a list model
        customerInterestsList.setModel(listmodel);
        //allInterests.get(interestList.getSelectedIndex());

        selectedCustomer.getMembership().getAreasOfInterestList().add(allInterests.get(interestList.getSelectedIndex()));






    }//GEN-LAST:event_addButtonMouseClicked

    private void setCustInfo(Customer c) {

        // take a customer and add set the view's values with it
        FNameText.setText(c.getFirstName());
        LNameText.setText(c.getLastName());
        addressText.setText(c.getAddress());
        phoneText.setText(c.getPhone());
        emailText.setText(c.getEmail());
        
        if (selectedCustomer.getMembership() != null){

            updateAllInterestList();
            updateCustomerInterestList(selectedCustomer);

            cardText.setText(selectedCustomer.getMembership().getCreditCardNumber());
            isMemberBox.setSelected(true);
        }else{
            clearMembershipInfo();
            
        }
        
        
        
        
    }

    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JList CustomerList;
    private javax.swing.JTextField FNameText;
    private javax.swing.JTextField LNameText;
    private javax.swing.JButton addButton;
    private javax.swing.JTextField addressText;
    private javax.swing.JTextField cardText;
    private javax.swing.JList customerInterestsList;
    private javax.swing.JTextField emailText;
    private javax.swing.JList interestList;
    private javax.swing.JCheckBox isMemberBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JButton newButton;
    private javax.swing.JTextField phoneText;
    private javax.swing.JButton saveButton;
    // End of variables declaration//GEN-END:variables

}
